---
title: "Aula 1 - Econometria de Séries Temporais"
author: "João Ricardo F. de Lima"
date: "today"
editor: source
lang: pt
language: 
  toc-title-document: '<a href="https://www.facape.br/" target="_blank"><img src="https://github.com/econfacape/macroeconometria/blob/main/logofacape.jpg?raw=true" alt="Logotipo Facape" width="150"></a>'
format: 
  html:
    toc: true
    toc_float:
      collapsed: yes
      smooth_scroll: yes
    toc-location: left
    code-fold: false
    embed-resources: true
    page-layout: full
    fig-width: 10
    fig-height: 8
    fig-align: center
    df-print: paged
    fontsize: 13pt
theme:
  light: flatly
execute:
  echo: TRUE
  message: false
  warning: false
---

<br>

# Introdução e Conceitos Preliminares

<br>

A **Análise de Série Temporal** consiste no uso de técnicas estatísticas para identificar padrão de comportamento de dados cronológicos e ajustar modelos para previsão. 

Os **modelos de séries temporais** diferem dos **modelos econométricos tradicionais** porque não se baseiam em um modelo fornecido pela teoria econômica, que estabelece uma relação entre as variáveis econômicas. Por isso, são chamados de **ateóricos**. 

Uma **Série Temporal** é qualquer conjunto de dados ordenados no tempo, com cada valor associado a um instante de tempo.

<br>

# Modelos Univariados e Multivariados

<br>

A análise de uma série de dados é chamada de *análise univariada* e conduz à utilização de *modelos univariados* de séries temporais.

Considere $Y_t, t=1,2,3...,T$ uma série de preços de manga Palmer ao produtor do Vale do São Francisco, como a demonstrada no gráfico abaixo.

<br>

```{r econ1, warning=FALSE, message=FALSE}
#Verificando o diretorio que o R está direcionado
getwd()

#Direcionado o R para o Diretorio a ser trabalhado
setwd('/Users/jricardofl/Dropbox/tempecon/dados_manga')

#Limpa o Ambiente Global
rm(list=ls())

#Inicio do Script
#Pacotes a serem utilizados 
library(foreign)
library(mFilter)
library(forecast)
library(dplyr)
library(tsutils)
library(xts)
library(ggthemes)
library(FinTS)
library(scales)
library(ggplot2)
library(plotly)
library(quantmod)

options(digits=4)

#Entrando dados no R

today <- as.Date("2025-01-17")
sem_ano <- 3 #ajustar semanalmente

dados <- read.csv2('dados_manga_palmer_semana.csv', header=T, sep=";", dec=".")
#dados <- dados[,-c(9:10)] #retirar as ultimas colunas
colnames(dados)[1]<-'produto'

#Entrando dados no R - Deflator
igpdi <- read.csv2('igpdi.csv', 
                   header=T, sep=";",
                   dec=".")

dados_comb<-cbind(dados, igpdi)
dadosp<-dados_comb[,-c(1,2,6,7)]

#Deflacionar a serie de manga
dadosp$preco_def <- dadosp[,3]*(tail(dadosp[,4],1)/dadosp[,4])
#dadosp<-dadosp[,-2]

#Criando uma variável com as datas semanais
dadosp$date <- seq(as.Date('2012-01-14'),to=today,by='1 week') 
dadosp$date[dadosp$date == "2016-01-02"] <- "2015-12-31" #ajustando algumas datas
dadosp$date[dadosp$date == "2015-01-03"] <- "2014-12-31"
dadosp$date[dadosp$date == "2014-01-04"] <- "2013-12-31"
dadosp$date[dadosp$date == "2013-01-05"] <- "2012-12-31"
dadosp$date[dadosp$date == "2022-01-01"] <- "2022-01-03"
dadosp$date[dadosp$date == "2022-12-31"] <- "2023-01-01"

#Analise de Serie Temporal
preco_palmer <- dadosp[,5]
preco_palmer <- ts(preco_palmer, start=c(2012,1), freq=52)

#Gráfico com Ggplot2

g1 <- ggplot(data=dadosp, aes(x=date)) +  #estetica vai valer para todos os geom's
  geom_line(aes(y=preco_def, colour="PREÇO"), lwd=1)+
  scale_colour_manual("", 
                      breaks = c("PREÇO"),
                      values = c("blue")) +
  labs(y= "Preço R$", x= "Semanas de cada Ano", title='',
       caption = "Fonte: CEPEA reprocessado pelo Observatório de Mercado de Manga da Embrapa") +
  scale_y_continuous(limits=c(0,8), n.breaks = 9, expand = expansion(add=c(0,0.5)), 
                     labels=number_format(accuracy = 0.01, decimal.mark = ","))+
  scale_x_date(date_breaks = "1 year",
               labels = date_format("%Y"))+
  theme_classic()+ #Definindo tema
  theme(axis.text.x=element_text(angle=35, hjust=1, size=10, margin = margin(b=20)),
        axis.text.y=element_text(hjust=1, size=10, margin = margin(l=20)),
        axis.title.x = element_text(size=10, face = "bold", margin = margin(b=20)),
        axis.title.y = element_text(size=10, face = "bold", margin = margin(l=20)),
        plot.title = element_text(hjust = 0.5, size=16, face="italic"),
        plot.caption = element_text(hjust = 0, size=12),
        legend.position = c(1,1),
        legend.justification = c(1.2, 1.2),
        legend.text=element_text(size=10)) # Definindo posição da legenda

ggplotly(g1) %>%
  layout(legend = list(
                      orientation = "h", 
                      x=0.35, 
                      y=-0.2,
                      title=''))

```

<br>
A análise de duas ou mais séries de dados é chamada de análise multivariada e envolve modelos multivariados; 

<br>
![Correlação Positiva e Negativa](img_r/manga_mult.jpg){width=85%}
<br>

# Análise Clássica e Moderna

<br> 
Até o início da década de 70 o estudo de séries temporais se dava por meio de uma *abordagem clássica* que procura decompor a série em componentes.

Os componentes não observáveis de uma série temporal são Tendência (T), Ciclo (C), Sazonalidade (S) e Variações Irregulares/Volatidade (I).

A idéia básica é que o valor da série em um dado instante de tempo é resultante da combinação de um ou mais destes 4 componentes.

<br>

```{r econ2, warning=FALSE, message=FALSE}
#Decompor a Serie
decompa <- decompose(preco_palmer, type = 'additive')
plot(decompa)
```

<br>

A abordagem moderna considera a série como gerada por um mecanismo de natureza aleatória denominado **processo estocástico}

Um **processo estocástico** é uma coleção de variáveis aleatórias ordenadas no tempo; 
Se consideramos Y como uma variável aleatória, e se Y for uma variável discreta, denominamos de $Y_t$, com cada t identificando um ponto no tempo, ou seja $Y_{2012m01}, Y_{2012m02}, Y_{2012m03}, ..., Y_{2019m07}, Y_{2019m08}$ para os dados mensais de preços de manga Palmer, ao produtor do Vale do São Francisco. 

Em Julho de 2019 o preço de manga Palmer, ao produtor, foi de R\$1,88. Em agosto, está R\$2,00. Contudo, em teoria, o preço poderia ser qualquer outro, dependendo da demanda, da quantidade produzida, da qualidade da fruta, etc.

Assim, o valor de R\$1,88 e R\$2,00 são **realizações** particulares de todas as tais possibilidades de preços.

Assim, pode-se considerar que a variável preço de manga Palmer, ao produtor, é um processo estocástico e os valores reais observados no período são particulares realizações deste processo.

<br>

# Objetivos da Análise de Séries Temporais

<br>

Basicamente se estuda Séries Temporais com os seguintes objetivos:
  
1) Descrever o comportamento da série, ou seja, verificar se possui algum padrão sistemático como tendência e periodicidades.

2) Investigar o mecanismo gerador pela especificação e estimação de um modelo que representa o processo gerador da série.

3) Previsão com uso de modelos uni ou multivariados.

<br>

# Defasagens e Avanços

<br>

A série temporal é uma sequencia de observações ordenadas no tempo e tem a característica de possuir altas correlações entre os valores de diferentes pontos da série.

Um valor alto no instante t é, em grande parte, resultado de um alto(baixo) em t-1, indicando uma correlação positiva(negativa).

Esta correlação é feito relacionado defasagens/lags ou avanços.

Estas defasagens ou avanços são novas variáveis que podem ser analisadas como qualquer outra

<br>

# Operadores

<br>

Os **operadores** são usados com a finalidade de simplificar a notação e facilitar as manipulações de séries temporais.

É um símbolo ou letra que, quando aplicado à uma série, define uma transformação/operação na série.

L é utilizado para definir uma defasagem. Define-se:

$$L^kY_t=Y_{t-k}$$

ou seja, $L^k$ precedendo $Y_t$ significa $Y_t$ defasado de k períodos.

para k=0, $L^0Y_t=Y_t$  

para k=1, $L^1Y_t=Y_{t-1}$  

para k=2, $L^2Y_t=L(LY_t)=LY_{t-1}=Y_{t-2}$   

e assim, sucessivamente!

```{r econ3, warning=FALSE, message=FALSE}
#Defasagens da Serie
l1dadosp <- Lag(preco_palmer, k=-1)
head(preco_palmer )
head(l1dadosp)

#Defasagens da Serie
l2dadosp <- Lag(preco_palmer, k=-2)
head(preco_palmer)
head(l1dadosp)
head(l2dadosp)

tail(preco_palmer)
tail(l1dadosp)
tail(l2dadosp)

```

# Operador de diferença $(\Delta$)

O operador de diferença $\Delta$ em uma série temporal gera uma nova série formada por diferenças sucessivas da série. Define-se $\Delta^dY_t$ como a série $Y_t$ diferenciada sequencialmente ``d'' vezes; 

Assim, para d=1, tem-se
$$
\Delta Y_t=Y_t-Y_{t-1}
$$ 
Para d=2, tem-se
$$
  \Delta^2 Y_t=\Delta(\Delta Y_t)=\Delta(Y_t-Y_{t-1})
$$
$$
  =\Delta Y_t-\Delta Y_{t-1}=Y_t-Y_{t-1}-(Y_{t-1}-Y_{t-2})
$$
$$
  \Delta^2 Y_t=Y_t-2Y_{t-1}+Y_{t-2}
$$

Existe uma relação entre L e $\Delta$, dada por

$$
  \Delta Y_t=Y_t-Y_{t-1}
$$ 
$$
  \Delta Y_t=Y_t-LY_t
$$

$$
  \Delta Y_t=(1-L)Y_t
$$ 
então, $\Delta=1-L$

<br>

```{r econ4, warning=FALSE, message=FALSE}
#Diferenciacao da Serie
ddadosp <- diff(preco_palmer)

head(preco_palmer)
head(ddadosp)

#Grafico da serie
plot(ddadosp, main='Preco Mensal de Manga Palmer - Vale - 1 Diferenca',
     xlab='(meses)', ylab='Reais (R$)', lwd=3)
axis(1, at=c(2012:2025))

#2 Diferenciacao da Serie
d2dadosp <- diff(preco_palmer, differences = 2)

head(preco_palmer)
head(d2dadosp)

#Grafico da serie
plot(d2dadosp, main='Preco Mensal de Manga Palmer - Vale - 2 Diferenca',
     xlab='(meses)', ylab='Reais (R$)', lwd=3)
axis(1, at=c(2012:2025))
```


# Análise dos Componentes da série temporal

O enfoque clássico da econometria de séries temporais busca decompor a série em quatro componentes:  
  
1) Tendencia (T): Componente da série que possui movimento contínuo, para cima ou baixo, por um período longo de tempo;  

2) Ciclo (C): Componente que apresenta movimento oscilatório ao longo da tendência durante um período de tempo maior do que um ano, nao necessariamente regular;  

3) Sazonalidade: Componente que apresenta movimento oscilatório que ocorre com regularidade em subperíodos de um período de tempo fixo;

4) Volatilidade (I): Componente aleatório;

Os objetivos da análise clássica são:  
  
1) Isolar o componente e analisar a série ``branqueada'', ou seja, sem o componente;  

2) Isolar e analisar o comportamento do componente;  

A decomposição dos componentes pode ser feita considerando que o modelo seja aditivo ou multiplicativo. No caso aditivo, é indicado quando os componentes são independentes,

$$ Y_t=T_t+C_t+S_t+\epsilon_t $$

No multiplicativo, são dependentes

$$ Y_t=T_t.C_t.S_t.\epsilon_t $$
Em geral, o modelo multiplicativo é apropriado quando a variação do padrão sazonal ou ao redor da componente ciclo-tendência aparentar dependência com outros componentes, como a tendência.

O modelo aditivo é mais apropriado quando estes componentes não forem proporcionais à magnitude dos dados, ou seja, forem independentes uns dos outros.

```{r econ5, warning=FALSE, message=FALSE}
#Decompor a Serie
decompa <- decompose(preco_palmer, type = 'additive')
plot(decompa)

decompam <- decompose(preco_palmer, type = 'multiplicative')
plot(decompam)
```

# Análise no Python

```{python}
import pandas as pd
from pathlib import Path
import plotnine as p9

# Caminho para os arquivos
data_dir = Path("/Users/jricardofl/Dropbox/tempecon/dados_manga")

df = (
    pd.read_csv(data_dir/'dados_manga_palmer_semana.csv', sep=';', decimal='.')
    .drop(columns=['produto', 'regiao', 'ano', 'semana'])
)

# Cria o intervalo de dados de 2012-01-07 ate a semana de 2024
date_range = pd.date_range(start='2012-01-01', end='2025-01-24', freq='W-SAT')

# Remove datas especificas (semana 53)
dates_to_remove = [pd.Timestamp('2016-12-31'), pd.Timestamp('2022-12-31')]
date_range = date_range[~date_range.isin(dates_to_remove)]

# Designa a date range como uma nova coluna
df['date'] = date_range[:len(df)]

df['date2'] = date_range[:len(df)]

# Configura a data como index
df = df.set_index('date')

# Carrega igpdi dataset
igpdi = (
    pd.read_csv(data_dir/'igpdi.csv', sep=';', decimal='.')
    .assign(date=df.index)
    .drop(columns=['ano', 'semana'])
    .set_index('date')
)

# Junta os DataFrames
tabela = df.join(igpdi, how='inner')

# Deflaciona a serie de preços de manga
indice_data_base = tabela.query("date == date.max()").igpdi.values[0]
tabela = tabela.assign(real=lambda x: (indice_data_base / x.igpdi) * x.preco)

# Visualização de dados
plot = (
  p9.ggplot(tabela) +
  p9.aes(x = "date2", y = "real") +
  p9.geom_line() +
  p9.scale_x_date(date_breaks = "2 year", date_labels = "%Y") +
  p9.labs(
    title = "Evolução dos Preços de Manga Palmer: 2012 a 2025",
    subtitle = "Ao produtor do Vale do São Francisco",
    x = "Semnas de cada ano",
    y = "Preço R$",
    caption = "Dados: CEPEA reprocessados pelo Observatório de Mercado da Embrapa"
    ) +
    p9.theme(
        figure_size=(12, 6)  # Width, Height
    )
)

plot.show()
```

```{python}
# Criação da variável preco_palmer
preco_palmer = tabela['real']

print(preco_palmer.head())
# Variáveis defasadas com 1 e 2 lags

# Variaveis com 1 e duas defasagens (lead shift(-1))
lag1_palmer = preco_palmer.shift(1)
print(lag1_palmer.head())
print(lag1_palmer.tail())

lag2_palmer = preco_palmer.shift(2)
print(lag2_palmer.head())
print(lag2_palmer.tail())

diff1_palmer = preco_palmer.diff(1)  # 1 diferença
diff2_palmer = preco_palmer.diff(2)  # 2 diferença

# Combine the Series into a DataFrame
plot_data = pd.DataFrame({
    'date2': preco_palmer.index,  # Use the index from preco_palmer
    'preco_palmer': preco_palmer.values,
    'diff1_palmer': diff1_palmer.values,
    'diff2_palmer': diff2_palmer.values
})

# Plot the first difference
plot_diff_1 = (
    p9.ggplot(plot_data) +
    p9.aes(x='date2', y='diff1_palmer') +
    p9.geom_line() +
    p9.scale_x_date(date_breaks = "2 year", date_labels = "%Y") +
    p9.labs(
        title="Primeira Diferença dos Preços de Manga Palmer",
        x="Data",
        y="Diferença (1ª Ordem)"
    ) +
    p9.theme(
        figure_size=(12, 6)  # Width, Height
    )
)

plot_diff_1.show()

# Plot the second difference
plot_diff_2 = (
    p9.ggplot(plot_data) +
    p9.aes(x='date2', y='diff2_palmer') +
    p9.geom_line() +
    p9.scale_x_date(date_breaks = "2 year", date_labels = "%Y") +
    p9.labs(
        title="Segunda Diferença dos Preços de Manga Palmer",
        x="Data",
        y="Diferença (2ª Ordem)"
    ) +
    p9.theme(
        figure_size=(12, 6)  # Width, Height
    )
)
plot_diff_2.show()

```

```{python}
from statsmodels.tsa.seasonal import seasonal_decompose
import matplotlib.pyplot as plt

# Decompose the series (additive model)
decompa = seasonal_decompose(preco_palmer, model='additive', period=52)  # Weekly data has a period of 52

# Plot the decomposition
decompa.plot()
plt.suptitle("Decomposição Aditiva da Série Temporal - Preços de Manga Palmer", fontsize=16)
plt.tight_layout()
plt.show()


# Decompose the series (additive model)
decompam = seasonal_decompose(preco_palmer, model='multiplicative', period=52)  # Dados semanais, são 52 semanas no ano!

# Plot the decomposition
decompa.plot()
plt.suptitle("Decomposição Multiplicativa da da Série Temporal - Preços de Manga Palmer", fontsize=16)
plt.tight_layout()
plt.show()
```

